name: Pull Request CI

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  push_tests:
    permissions: write-all
    name: Pull Request Tests
    runs-on: ubuntu-24.04

    services:
      mysql:
        image: mysql:8.0
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=root --password=rootpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout the test repository
        uses: actions/checkout@v4

      - name: Install Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Node.js 20.11.1
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1"

      - name: Create reports folder
        run: |
          mkdir -p reports/allure-report
          mkdir -p reports/allure-results

      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -U -r requirements.txt

      - name: Install Playwright
        run: |
          playwright install

      - name: Install MySQL Client & Python Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
          python -m pip install --upgrade pip
          pip install mysql-connector-python

      - name: Wait for MySQL and Initialize Database
        run: python init_db.py

      - name: Run the tests
        env:
          DB_NAME: testdb
          DB_USER: testuser
          DB_PASSWORD: testpassword
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: make pipeline

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: ./test-results.xml
          retention-days: 1

      - name: Surface failing tests
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
          path: test-results.xml
          summary: true
          display-options: fEX
          fail-on-empty: true
          title: Test results

      - name: Post Test Results
        if: success() || failure()
        uses: dorny/test-reporter@v2
        with:
          artifact: pytest-results
          name: JEST Tests
          path: './test-results.xml'
          reporter: jest-junit
          fail-on-error: false
